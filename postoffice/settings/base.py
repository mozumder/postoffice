"""
Django settings for postoffice project.

Generated by 'django-admin startproject' using Django 2.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from pathlib import Path
from decouple import config

PROJECT_NAME = 'postoffice'

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = Path(__file__).resolve().parents[2]

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('DJANGO_SECRET_KEY',default='')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DJANGO_DEBUG', default=False).lower()

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
#    'unchained',
#    'analytics',
    'accounts',
    'rules',
    'dns',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'postoffice.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'postoffice.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': config('POSTGRES_DB'), # Or path to database file if using sqlite3.
        'USER': config('POSTGRES_USER'),
        'PASSWORD': config('POSTGRES_PW'),
        'HOST': config('POSTGRES_HOST',default='localhost'), # Empty for localhost through domain sockets or '127.0.0.1' for localhost through TCP.
        'PORT': config('POSTGRES_PORT',default=None), # Set to empty string for default.
        'CONN_MAX_AGE': None,
    }
}

CACHES = {
    'default': {
         'BACKEND': 'redis_cache.RedisCache',
         'LOCATION': config('CACHE_LOCATION',default='/var/run/redis/redis.sock'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/s/'
MEDIA_URL = '/m/'

VENV_PATH = os.path.dirname(BASE_DIR)
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Logging
LOG_DIR = config('LOG_DIR',default='log')

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'log': {
            'format': '%(asctime)s.%(msecs)02d %(levelname)s: %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S',
        },
        'simple': {
            'format': '%(levelname)s: %(message)s',
        },
        'raw': {
            'format': '%(message)s',
        },
        'debug': {
            'format': '%(asctime)s.%(msecs)02d %(levelname)s: (%(module)-10s) %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S',
        },
        'message': {
            'format': '%(asctime)s.%(msecs)02d %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S',
        },
        'threaded': {
            'format': '%(asctime)s.%(msecs)02d | %(process)d: %(module)-10s (%(threadName)-10s) | %(levelname)s: %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S',
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
        'logfile': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': f'{LOG_DIR}/{PROJECT_NAME}.log',
            'formatter': 'log',
            'encoding': 'utf8',
        },
        'management': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
        'errors': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'filename': f'{LOG_DIR}/{PROJECT_NAME}.error.log',
            'formatter': 'threaded',
            'encoding': 'utf8',
        },
        'access': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': f'{LOG_DIR}/{PROJECT_NAME}.access.log',
            'formatter': 'message',
            'encoding': 'utf8',
        },
        'cache': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': f'{LOG_DIR}/{PROJECT_NAME}.cache.log',
            'formatter': 'message',
            'encoding': 'utf8',
        },
        'database': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': f'{LOG_DIR}/{PROJECT_NAME}.db.log',
            'formatter': 'log',
            'encoding': 'utf8',
        },
        'mail': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': f'{LOG_DIR}/{PROJECT_NAME}.mail.log',
            'formatter': 'message',
            'encoding': 'utf8',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
        },
        'management': {
            'handlers': ['console'],
            'level': os.getenv('DJANGO_MANAGEMENT_LOG_LEVEL', 'DEBUG'),
            'propagate': True,
        },
        'analytics': {
            'handlers': ['access'],
            'level': os.getenv('DJANGO_ANALYTICS_LOG_LEVEL', 'DEBUG' if DEBUG else 'INFO'),
            'propagate': True,
        },
        'cache': {
            'handlers': ['cache'],
            'level': os.getenv('DJANGO_CACHE_LOG_LEVEL', 'DEBUG' if DEBUG else 'INFO'),
            'propagate': True,
        },
        'database': {
            'handlers': ['database'],
            'level': os.getenv('DJANGO_DB_LOG_LEVEL', 'DEBUG' if DEBUG else 'INFO'),
            'propagate': True,
        },
        'django.db.backends': {
            'handlers': ['database'],
            'level': os.getenv('DJANGO_DB_LOG_LEVEL', 'INFO'),
            'propagate': True,
        },
        'mail': {
            'handlers': ['mail'],
            'level': os.getenv('DJANGO_MAIL_LOG_LEVEL', 'DEBUG' if DEBUG else 'INFO'),
            'propagate': True,
        },
        'images': {
            'handlers': ['console'],
            'level': os.getenv('DJANGO_IMAGESAPP_LOG_LEVEL', 'DEBUG' if DEBUG else 'INFO'),
            'propagate': True,
        },
    },
}
