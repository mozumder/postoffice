# Generated by Django 3.0.7 on 2021-03-14 21:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='A_Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('searchdomain', models.CharField(max_length=255, verbose_name='Search Domain Name')),
                ('name', models.CharField(blank=True, max_length=64, null=True, verbose_name='Name')),
                ('searchname', models.CharField(blank=True, max_length=255, null=True, verbose_name='Search Name')),
                ('ip_address', models.GenericIPAddressField(db_index=True, protocol='IPv4', verbose_name='IP Address')),
                ('roundrobin', models.BooleanField(default=False, verbose_name='Next Round Robin')),
                ('dynamic_ip', models.BooleanField(default=False, verbose_name='Dynamic IP')),
                ('ttl', models.IntegerField(default=14400, verbose_name='Time-to-Live')),
                ('serial', models.IntegerField(default=0, verbose_name='Serial Number')),
                ('source', models.CharField(choices=[('0', 'Admin'), ('1', 'Script'), ('2', 'Web'), ('3', 'API'), ('3', 'Socket')], default='0', max_length=1, verbose_name='Source')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
            ],
            options={
                'verbose_name': 'A Record',
                'ordering': ['domain', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Domain Name')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='domain_owner', to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name': 'Domain',
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Name')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dns.Domain', verbose_name='Domain')),
            ],
            options={
                'verbose_name': 'Host',
            },
        ),
        migrations.CreateModel(
            name='IPLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(db_index=True, verbose_name='IP Address')),
                ('date_updated', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='Date Updated')),
            ],
            options={
                'verbose_name': 'IP Address',
                'verbose_name_plural': 'IP Addresses',
                'ordering': ['-date_updated'],
            },
        ),
        migrations.CreateModel(
            name='TXT_Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('searchdomain', models.CharField(max_length=255, verbose_name='Search Domain Name')),
                ('name', models.CharField(blank=True, max_length=64, null=True, verbose_name='Name')),
                ('searchname', models.CharField(blank=True, max_length=255, null=True, verbose_name='Search Name')),
                ('value', models.CharField(blank=True, max_length=65535, null=True, verbose_name='Value')),
                ('ttl', models.IntegerField(default=14400, verbose_name='Time-to-Live')),
                ('serial', models.IntegerField(default=0, verbose_name='Serial Number')),
                ('source', models.CharField(choices=[('0', 'Admin'), ('1', 'Script'), ('2', 'Web'), ('3', 'API'), ('3', 'Socket')], default='0', max_length=1, verbose_name='Source')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dns.Domain', verbose_name='Domain')),
            ],
            options={
                'verbose_name': 'TXT Record',
                'ordering': ['domain', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SRV_Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('searchdomain', models.CharField(max_length=255, verbose_name='Search Domain Name')),
                ('name', models.CharField(blank=True, max_length=64, null=True, verbose_name='Name')),
                ('searchname', models.CharField(blank=True, max_length=255, null=True, verbose_name='Search Name')),
                ('priority', models.IntegerField(verbose_name='Priority')),
                ('weight', models.IntegerField(verbose_name='Weight')),
                ('port', models.IntegerField(verbose_name='Port')),
                ('target', models.CharField(blank=True, max_length=64, null=True, verbose_name='Target')),
                ('ttl', models.IntegerField(default=14400, verbose_name='TTL')),
                ('serial', models.IntegerField(default=0, verbose_name='Serial Number')),
                ('source', models.CharField(choices=[('0', 'Admin'), ('1', 'Script'), ('2', 'Web'), ('3', 'API'), ('3', 'Socket')], default='0', max_length=1, verbose_name='Source')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dns.Domain', verbose_name='Domain')),
                ('host', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dns.Host', verbose_name='Host')),
            ],
            options={
                'verbose_name': 'SRV Record',
                'ordering': ['domain', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SOA_Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('searchdomain', models.CharField(blank=True, max_length=255, null=True, verbose_name='Search Domain Name')),
                ('rname', models.CharField(blank=True, max_length=255, null=True, verbose_name='Responsible Party Name')),
                ('nameserver', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name Server')),
                ('refresh', models.IntegerField(default=43200, verbose_name='Refresh Time')),
                ('retry', models.IntegerField(default=3600, verbose_name='Retry Time')),
                ('expiry', models.IntegerField(default=1209600, verbose_name='Expiration Time')),
                ('nxttl', models.IntegerField(default=180, verbose_name='Negative Caching Time')),
                ('ttl', models.IntegerField(default=14400, verbose_name='Time-to-Live')),
                ('serial', models.IntegerField(default=0, verbose_name='Serial Number')),
                ('source', models.CharField(choices=[('0', 'Admin'), ('1', 'Script'), ('2', 'Web'), ('3', 'API'), ('3', 'Socket')], default='0', max_length=1, verbose_name='Source')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dns.Domain', verbose_name='Domain')),
                ('nameserver_host', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dns.Host', verbose_name='Name Server Host')),
            ],
            options={
                'verbose_name': 'SOA Record',
                'ordering': ['domain'],
            },
        ),
        migrations.CreateModel(
            name='PTR_Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('searchdomain', models.CharField(max_length=255, verbose_name='Search Domain Name')),
                ('name', models.CharField(max_length=64, verbose_name='Name')),
                ('searchname', models.CharField(blank=True, max_length=255, null=True, verbose_name='Search Name')),
                ('hostname', models.CharField(max_length=64, verbose_name='Host Name')),
                ('ttl', models.IntegerField(default=14400, verbose_name='Time-to-Live')),
                ('serial', models.IntegerField(default=0, verbose_name='Serial Number')),
                ('source', models.CharField(choices=[('0', 'Admin'), ('1', 'Script'), ('2', 'Web'), ('3', 'API'), ('3', 'Socket')], default='0', max_length=1, verbose_name='Source')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dns.Domain', verbose_name='Domain')),
                ('host', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dns.Host', verbose_name='Host')),
            ],
            options={
                'verbose_name': 'PTR Record',
                'ordering': ['domain', 'name'],
            },
        ),
        migrations.CreateModel(
            name='NS_Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('searchdomain', models.CharField(max_length=255, verbose_name='Search Domain Name')),
                ('name', models.CharField(max_length=64, verbose_name='Name')),
                ('searchname', models.CharField(blank=True, max_length=255, null=True, verbose_name='Search Name')),
                ('delegate', models.CharField(max_length=64, verbose_name='Delegate')),
                ('ttl', models.IntegerField(default=14400, verbose_name='Time-to-Live')),
                ('serial', models.IntegerField(default=0, verbose_name='Serial Number')),
                ('source', models.CharField(choices=[('0', 'Admin'), ('1', 'Script'), ('2', 'Web'), ('3', 'API'), ('3', 'Socket')], default='0', max_length=1, verbose_name='Source')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('delegate_host', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dns.Host', verbose_name='Delegate Host')),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dns.Domain', verbose_name='Domain')),
            ],
            options={
                'verbose_name': 'NS Record',
                'ordering': ['domain', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MX_Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('searchdomain', models.CharField(max_length=255, verbose_name='Search Domain Name')),
                ('name', models.CharField(blank=True, max_length=64, null=True, verbose_name='Name')),
                ('searchname', models.CharField(blank=True, max_length=255, null=True, verbose_name='Search Name')),
                ('hostname', models.CharField(blank=True, max_length=64, null=True, verbose_name='Hostname')),
                ('preference', models.IntegerField(default=0, verbose_name='Preference')),
                ('ttl', models.IntegerField(default=14400, verbose_name='Time-to-Live')),
                ('serial', models.IntegerField(default=0, verbose_name='Serial Number')),
                ('source', models.CharField(choices=[('0', 'Admin'), ('1', 'Script'), ('2', 'Web'), ('3', 'API'), ('3', 'Socket')], default='0', max_length=1, verbose_name='Source')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dns.Domain', verbose_name='Domain')),
                ('host', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dns.Host', verbose_name='Mail Server Host')),
            ],
            options={
                'verbose_name': 'MX Record',
                'ordering': ['domain', 'name'],
            },
        ),
        migrations.CreateModel(
            name='DynamicDNSAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=15, verbose_name='User Name')),
                ('password', models.CharField(blank=True, max_length=40, null=True, verbose_name='Password')),
                ('endpoint', models.URLField(max_length=150, verbose_name='DNS Update Endpoint URL')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('domains', models.ManyToManyField(to='dns.Domain')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dyndnsaccount_owner', to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name': 'Dynamic DNS Account',
            },
        ),
        migrations.CreateModel(
            name='DynamicDNS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dyndns_id', models.CharField(db_index=True, max_length=15, unique=True, verbose_name='Record ID')),
                ('password', models.CharField(blank=True, max_length=40, null=True, verbose_name='Record Password')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('a_record', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dns.A_Record')),
            ],
            options={
                'verbose_name': 'Dynamic DNS Record',
            },
        ),
        migrations.CreateModel(
            name='CNAME_Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('searchdomain', models.CharField(max_length=255, verbose_name='Search Domain Name')),
                ('name', models.CharField(max_length=64, verbose_name='Alias Name')),
                ('searchname', models.CharField(blank=True, max_length=255, null=True, verbose_name='Search Name')),
                ('canonical_name', models.CharField(max_length=255, verbose_name='Canonical Name')),
                ('ttl', models.IntegerField(default=14400, verbose_name='Time-to-Live')),
                ('serial', models.IntegerField(default=0, verbose_name='Serial Number')),
                ('source', models.CharField(choices=[('0', 'Admin'), ('1', 'Script'), ('2', 'Web'), ('3', 'API'), ('3', 'Socket')], default='0', max_length=1, verbose_name='Source')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dns.Domain', verbose_name='Domain')),
                ('host', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dns.Host', verbose_name='Canonical Host')),
            ],
            options={
                'verbose_name': 'CNAME Record',
                'ordering': ['domain', 'name'],
            },
        ),
        migrations.CreateModel(
            name='CAA_Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('searchdomain', models.CharField(max_length=255, verbose_name='Search Domain Name')),
                ('name', models.CharField(blank=True, max_length=64, null=True, verbose_name='Name')),
                ('searchname', models.CharField(blank=True, max_length=255, null=True, verbose_name='Search Name')),
                ('type', models.CharField(choices=[(0, 'issue'), (1, 'issuewild'), (2, 'iodef')], max_length=1, verbose_name='Type')),
                ('issuer_critical', models.BooleanField(default=False, verbose_name='Issuer Critical')),
                ('tag', models.CharField(max_length=16, verbose_name='Tag')),
                ('value', models.CharField(max_length=1024, verbose_name='Value')),
                ('ttl', models.IntegerField(default=14400, verbose_name='Time-to-Live')),
                ('serial', models.IntegerField(default=0, verbose_name='Serial Number')),
                ('source', models.CharField(choices=[('0', 'Admin'), ('1', 'Script'), ('2', 'Web'), ('3', 'API'), ('3', 'Socket')], default='0', max_length=1, verbose_name='Source')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dns.Domain', verbose_name='Domain')),
            ],
            options={
                'verbose_name': 'CAA Record',
                'ordering': ['domain', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AAAA_Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('searchdomain', models.CharField(max_length=255, verbose_name='Search Domain Name')),
                ('name', models.CharField(blank=True, max_length=64, null=True, verbose_name='Name')),
                ('searchname', models.CharField(blank=True, max_length=255, null=True, verbose_name='Search Name')),
                ('ip_address', models.GenericIPAddressField(db_index=True, protocol='IPv6', verbose_name='IP Address')),
                ('ttl', models.IntegerField(default=14400, verbose_name='Time-to-Live')),
                ('serial', models.IntegerField(default=0, verbose_name='Serial Number')),
                ('source', models.CharField(choices=[('0', 'Admin'), ('1', 'Script'), ('2', 'Web'), ('3', 'API'), ('3', 'Socket')], default='0', max_length=1, verbose_name='Source')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dns.Domain', verbose_name='Domain')),
                ('host', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dns.Host', verbose_name='Host')),
            ],
            options={
                'verbose_name': 'AAAA Record',
                'ordering': ['domain', 'name'],
            },
        ),
        migrations.AddField(
            model_name='a_record',
            name='domain',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dns.Domain', verbose_name='Domain'),
        ),
        migrations.AddField(
            model_name='a_record',
            name='host',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dns.Host', verbose_name='Host'),
        ),
        migrations.AddIndex(
            model_name='txt_record',
            index=models.Index(fields=['domain'], name='txt_record_idx'),
        ),
        migrations.AddIndex(
            model_name='srv_record',
            index=models.Index(fields=['name', 'domain'], name='SRV_record_idx'),
        ),
        migrations.AddConstraint(
            model_name='srv_record',
            constraint=models.UniqueConstraint(fields=('name', 'domain'), name='SRV_record_uniques'),
        ),
        migrations.AddIndex(
            model_name='soa_record',
            index=models.Index(fields=['domain'], name='soa_record_idx'),
        ),
        migrations.AddConstraint(
            model_name='soa_record',
            constraint=models.UniqueConstraint(fields=('domain',), name='soa_record_uniques'),
        ),
        migrations.AddIndex(
            model_name='ptr_record',
            index=models.Index(fields=['name', 'domain'], name='ptr_record_idx'),
        ),
        migrations.AddConstraint(
            model_name='ptr_record',
            constraint=models.UniqueConstraint(fields=('name', 'domain'), name='ptr_record_uniques'),
        ),
        migrations.AddIndex(
            model_name='ns_record',
            index=models.Index(fields=['name', 'domain'], name='ns_record_idx'),
        ),
        migrations.AddConstraint(
            model_name='ns_record',
            constraint=models.UniqueConstraint(fields=('name', 'domain'), name='ns_record_uniques'),
        ),
        migrations.AddIndex(
            model_name='mx_record',
            index=models.Index(fields=['name', 'domain'], name='mx_record_idx'),
        ),
        migrations.AddConstraint(
            model_name='mx_record',
            constraint=models.UniqueConstraint(fields=('name', 'domain'), name='mx_record_uniques'),
        ),
        migrations.AddIndex(
            model_name='host',
            index=models.Index(fields=['name', 'domain'], name='host_idx'),
        ),
        migrations.AddConstraint(
            model_name='host',
            constraint=models.UniqueConstraint(fields=('name', 'domain'), name='host_uniques'),
        ),
        migrations.AddIndex(
            model_name='dynamicdnsaccount',
            index=models.Index(fields=['owner', 'username'], name='dyndnsaccount_idx'),
        ),
        migrations.AddConstraint(
            model_name='dynamicdnsaccount',
            constraint=models.UniqueConstraint(fields=('owner', 'username'), name='dyndnsaccount_uniques'),
        ),
        migrations.AddIndex(
            model_name='domain',
            index=models.Index(fields=['owner', 'name'], name='domain_idx'),
        ),
        migrations.AddConstraint(
            model_name='domain',
            constraint=models.UniqueConstraint(fields=('owner', 'name'), name='domain_uniques'),
        ),
        migrations.AddIndex(
            model_name='cname_record',
            index=models.Index(fields=['name', 'domain'], name='cname_record_idx'),
        ),
        migrations.AddConstraint(
            model_name='cname_record',
            constraint=models.UniqueConstraint(fields=('name', 'domain'), name='cname_record_uniques'),
        ),
        migrations.AddIndex(
            model_name='caa_record',
            index=models.Index(fields=['type', 'domain'], name='caa_record_idx'),
        ),
        migrations.AddIndex(
            model_name='aaaa_record',
            index=models.Index(fields=['name', 'domain'], name='aaaa_record_idx'),
        ),
        migrations.AddIndex(
            model_name='a_record',
            index=models.Index(fields=['name', 'domain'], name='a_record_idx'),
        ),
    ]
